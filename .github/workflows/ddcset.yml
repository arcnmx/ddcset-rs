env:
  CI_ALLOW_ROOT: '1'
  CI_CONFIG: ./ci.nix
  CI_PLATFORM: gh-actions
jobs:
  ci-check:
    name: ddcset check
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: git clone
      uses: actions/checkout@v1
      with:
        submodules: true
    - id: nix-install
      name: nix install
      uses: arcnmx/ci/actions/nix/install@master
    - id: ci-action-build
      name: nix build ci.gh-actions.configFile
      uses: arcnmx/ci/actions/nix/build@master
      with:
        attrs: ci.gh-actions.configFile
        out-link: .ci/workflow.yml
    - id: ci-action-compare
      name: gh-actions compare
      uses: arcnmx/ci/actions/nix/run@master
      with:
        args: -u .github/workflows/ddcset.yml .ci/workflow.yml
        attrs: nixpkgs.diffutils
        command: diff
  macos:
    name: ddcset-macos
    permissions:
      contents: write
    runs-on: macos-10.15
    steps:
    - id: checkout
      name: git clone
      uses: actions/checkout@v1
      with:
        submodules: true
    - id: nix-install
      name: nix install
      uses: arcnmx/ci/actions/nix/install@master
    - id: ci-setup
      name: nix setup
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.macos.run.setup
        quiet: false
    - id: ci-dirty
      name: nix test dirty
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.macos.run.test
        command: ci-build-dirty
        quiet: false
        stdout: ${{ runner.temp }}/ci.build.dirty
    - id: ci-test
      name: nix test build
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.macos.run.test
        command: ci-build-realise
        ignore-exit-code: true
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
    - env:
        CI_EXIT_CODE: ${{ steps.ci-test.outputs.exit-code }}
      id: ci-summary
      name: nix test results
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.macos.run.test
        command: ci-build-summarise
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
        stdout: ${{ runner.temp }}/ci.build.cache
    - env:
        CACHIX_SIGNING_KEY: ${{ secrets.CACHIX_SIGNING_KEY }}
      id: ci-cache
      if: always()
      name: nix test cache
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.macos.run.test
        command: ci-build-cache
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.cache
    - id: artifact-build
      name: artifact build
      uses: arcnmx/ci/actions/nix/build@master
      with:
        attrs: config.jobs.macos.artifactPackage
        file: <ci>
        out-link: .ci/artifacts
    - id: artifact-upload
      name: artifact upload
      uses: actions/upload-artifact@v2
      with:
        name: ddcset
        path: .ci/artifacts/bin/ddcset*
    - id: release-upload
      if: startsWith(github.ref, 'refs/tags/')
      name: release
      uses: softprops/action-gh-release@v1
      with:
        files: .ci/artifacts/bin/ddcset*
  nixos:
    name: ddcset-nixos
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: git clone
      uses: actions/checkout@v1
      with:
        submodules: true
    - id: nix-install
      name: nix install
      uses: arcnmx/ci/actions/nix/install@master
    - id: ci-setup
      name: nix setup
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.nixos.run.setup
        quiet: false
    - id: ci-dirty
      name: nix test dirty
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.nixos.run.test
        command: ci-build-dirty
        quiet: false
        stdout: ${{ runner.temp }}/ci.build.dirty
    - id: ci-test
      name: nix test build
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.nixos.run.test
        command: ci-build-realise
        ignore-exit-code: true
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
    - env:
        CI_EXIT_CODE: ${{ steps.ci-test.outputs.exit-code }}
      id: ci-summary
      name: nix test results
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.nixos.run.test
        command: ci-build-summarise
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
        stdout: ${{ runner.temp }}/ci.build.cache
    - env:
        CACHIX_SIGNING_KEY: ${{ secrets.CACHIX_SIGNING_KEY }}
      id: ci-cache
      if: always()
      name: nix test cache
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.nixos.run.test
        command: ci-build-cache
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.cache
    - id: artifact-build
      name: artifact build
      uses: arcnmx/ci/actions/nix/build@master
      with:
        attrs: config.jobs.nixos.artifactPackage
        file: <ci>
        out-link: .ci/artifacts
    - id: artifact-upload
      name: artifact upload
      uses: actions/upload-artifact@v2
      with:
        name: ddcset
        path: .ci/artifacts/bin/ddcset*
    - id: release-upload
      if: startsWith(github.ref, 'refs/tags/')
      name: release
      uses: softprops/action-gh-release@v1
      with:
        files: .ci/artifacts/bin/ddcset*
name: ddcset
'on':
- push
- pull_request
